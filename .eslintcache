[{"/home/gc/gc/react/gcboard/src/index.js":"1","/home/gc/gc/react/gcboard/src/App.js":"2","/home/gc/gc/react/gcboard/src/components/HeaderMenu.js":"3","/home/gc/gc/react/gcboard/src/components/Board.js":"4"},{"size":219,"mtime":1612343843970,"results":"5","hashOfConfig":"6"},{"size":258,"mtime":1612426659927,"results":"7","hashOfConfig":"6"},{"size":1419,"mtime":1612373560979,"results":"8","hashOfConfig":"6"},{"size":1805,"mtime":1612421722609,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"bezji1",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"12"},"/home/gc/gc/react/gcboard/src/index.js",[],["21","22"],"/home/gc/gc/react/gcboard/src/App.js",[],"/home/gc/gc/react/gcboard/src/components/HeaderMenu.js",["23","24","25","26","27","28","29","30","31","32","33"],"import Grid from '@material-ui/core/Grid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBars,\n  faPlus,\n  faInfoCircle,\n  faBell,\n  faStar,\n  faEllipsisH,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport '../styles/HeaderMenu.css';\n\nexport default function HeaderMenu() {\n  return (\n    <div className=\"headerMenuWrapper\">\n      <Grid container className=\"topSection\">\n        <section className=\"topLeftSection\">\n          <a>\n            <FontAwesomeIcon icon={faBars} />\n          </a>\n          <a>Boards</a>\n          <input placeholder=\"Search\"></input>\n        </section>\n        <section className=\"topRightSection\">\n          <a>\n            <FontAwesomeIcon icon={faPlus} />\n          </a>\n          <a>\n            <FontAwesomeIcon icon={faInfoCircle} />\n          </a>\n          <a>\n            <FontAwesomeIcon icon={faBell} />\n          </a>\n          <a>Profile</a>\n        </section>\n      </Grid>\n      <Grid container className=\"bottomSection\">\n        <section className=\"botLeftSection\">\n          <a>Board View</a>\n          <a>Board Name</a>\n          <a>\n            <FontAwesomeIcon icon={faStar} />\n          </a>\n          |<a>Some other options</a>\n        </section>\n        <section className=\"botRightSection\">\n          <a>\n            <FontAwesomeIcon icon={faEllipsisH} /> Show Menu\n          </a>\n        </section>\n      </Grid>\n    </div>\n  );\n}\n","/home/gc/gc/react/gcboard/src/components/Board.js",["34","35"],"import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport '../styles/Board.css';\n\nexport default function Board() {\n  const [list, setList] = useState([\n    {\n      title: 'Sample',\n      cards: [\n        {\n          title: 'Sample Card',\n          description: 'Enter the description for this card',\n          activities: 'Isaac added this card to Sample',\n          comments: 'First comment',\n          timeStamp: 'Feb 3, 2021 9:55 AM',\n        },\n        {\n          title: 'Sample Card2',\n          description: 'Enter the description for this card',\n          activities: 'Isaac added this card to Sample',\n          comments: 'First comment',\n          timeStamp: 'Feb 3, 2021 9:55 AM',\n        },\n      ],\n    },\n  ]);\n  const renderList = () => {\n    return list.map((item) => {\n      return (\n        <div className=\"boardList\">\n          <section className=\"listHeader\">\n            <div className=\"title\">{item.title}</div>\n            <div className=\"menu\"></div>\n          </section>\n          <section>{listItems(item.title)}</section>\n          <section>\n            <FontAwesomeIcon icon={faPlus} /> Add another card\n          </section>\n        </div>\n      );\n    });\n  };\n\n  const listItems = (listTitle) => {\n    const cards = list.filter((item) => item.title == listTitle);\n    console.log(cards[0].cards);\n    return cards[0].cards.map((item) => {\n      return <div className=\"listItems\">{item.title}</div>;\n    });\n  };\n\n  return (\n    <Grid container className=\"boardWrapper\">\n      {renderList()}\n      <div className=\"addList\">\n        <FontAwesomeIcon icon={faPlus} /> Add another list\n      </div>\n    </Grid>\n  );\n}\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":19,"column":11,"nodeType":"42","endLine":19,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":22,"column":11,"nodeType":"42","endLine":22,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":26,"column":11,"nodeType":"42","endLine":26,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":29,"column":11,"nodeType":"42","endLine":29,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":32,"column":11,"nodeType":"42","endLine":32,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":35,"column":11,"nodeType":"42","endLine":35,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":40,"column":11,"nodeType":"42","endLine":40,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":41,"column":11,"nodeType":"42","endLine":41,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":42,"column":11,"nodeType":"42","endLine":42,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":45,"column":12,"nodeType":"42","endLine":45,"endColumn":15},{"ruleId":"40","severity":1,"message":"41","line":48,"column":11,"nodeType":"42","endLine":48,"endColumn":14},{"ruleId":"43","severity":1,"message":"44","line":9,"column":16,"nodeType":"45","messageId":"46","endLine":9,"endColumn":23},{"ruleId":"47","severity":1,"message":"48","line":48,"column":52,"nodeType":"49","messageId":"50","endLine":48,"endColumn":54},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'setList' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]